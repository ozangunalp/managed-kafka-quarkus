mp.messaging.incoming.messages.topic=clickstream
mp.messaging.incoming.messages.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
mp.messaging.outgoing.messages-out.topic=clickstream
mp.messaging.outgoing.messages-out.value.serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

confluent.kafka.bootstrap.servers=CHANGE_ME
confluent.kafka.api.key=CHANGE_ME
confluent.kafka.api.secret=CHANGE_ME

confluent.schema.registry.url=CHANGE_ME
confluent.schema.registry.api.key=CHANGE_ME
confluent.schema.registry.api.secret=CHANGE_ME

%managed.kafka.bootstrap.servers=${confluent.kafka.bootstrap.servers}
%managed.kafka.security.protocol=SASL_SSL
%managed.kafka.sasl.mechanism=PLAIN
%managed.kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
  username="${confluent.kafka.api.key}" \
  password="${confluent.kafka.api.secret}";

# automatically register the schema with the registry, if not present
mp.messaging.outgoing.messages-out.auto.register.schemas=true
%managed.quarkus.apicurio-registry.devservices.enabled=false
%managed.kafka.schema.registry.url=${confluent.schema.registry.url}
%managed.kafka.basic.auth.user.info=${confluent.schema.registry.api.key}:${confluent.schema.registry.api.secret}
%managed.kafka.basic.auth.credentials.source=USER_INFO

quarkus.container-image.group=clickstream
