mp.messaging.incoming.messages.topic=clickstream
mp.messaging.outgoing.messages-out.topic=clickstream

rhoas.client.id=CHANGE_ME
rhoas.client.secret=CHANGE_ME
rhoas.token.endpoint=https://identity.api.openshift.com/auth/realms/rhoas/protocol/openid-connect/token

rhoas.bootstrap.servers=CHANGE_ME
rhoas.service.registry.url=CHANGE_ME

%managed.kafka.bootstrap.servers=${rhoas.bootstrap.servers}
%managed.kafka.security.protocol=SASL_SSL
%managed.kafka.sasl.mechanism=OAUTHBEARER
%managed.kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.client.id="${rhoas.client.id}" \
  oauth.client.secret="${rhoas.client.secret}" \
  oauth.token.endpoint.uri="${rhoas.token.endpoint}";
%managed.kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

# automatically register the schema with the registry, if not present
mp.messaging.outgoing.messages-out.apicurio.registry.auto-register=true

%managed.kafka.apicurio.registry.url=${rhoas.service.registry.url}/apis/registry/v2
%managed.mp.messaging.outgoing.messages-out.apicurio.registry.avro-datum-provider=io.apicurio.registry.serde.avro.ReflectAvroDatumProvider
%managed.mp.messaging.outgoing.messages-out.apicurio.auth.service.token.endpoint=${rhoas.token.endpoint}
%managed.mp.messaging.outgoing.messages-out.apicurio.auth.client.id=${rhoas.client.id}
%managed.mp.messaging.outgoing.messages-out.apicurio.auth.client.secret=${rhoas.client.secret}

%managed.mp.messaging.incoming.messages.apicurio.registry.avro-datum-provider=io.apicurio.registry.serde.avro.ReflectAvroDatumProvider
%managed.mp.messaging.incoming.messages.apicurio.auth.service.token.endpoint=${rhoas.token.endpoint}
%managed.mp.messaging.incoming.messages.apicurio.auth.client.id=${rhoas.client.id}
%managed.mp.messaging.incoming.messages.apicurio.auth.client.secret=${rhoas.client.secret}

quarkus.container-image.group=clickstream

quarkus.kubernetes-service-binding.enabled=true
quarkus.kubernetes-service-binding.services.kafka.api-version=rhoas.redhat.com/v1alpha1
quarkus.kubernetes-service-binding.services.kafka.kind=KafkaConnection
quarkus.kubernetes-service-binding.services.kafka.name=clickstream
quarkus.kubernetes-service-binding.services.kafka.detect-binding-resources=true

quarkus.kubernetes-service-binding.services.serviceregistry.api-version=rhoas.redhat.com/v1alpha1
quarkus.kubernetes-service-binding.services.serviceregistry.kind=ServiceRegistryConnection
quarkus.kubernetes-service-binding.services.serviceregistry.name=clickstream
quarkus.kubernetes-service-binding.services.serviceregistry.detect-binding-resources=true
